import asyncio
from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram import Bot
from aiogram.types import (InlineKeyboardMarkup, InlineKeyboardButton)
import f_raspis

raspis=Router()

class raspisanie(StatesGroup):
    text=State()


@raspis.callback_query(F.data=="—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def rasp(callback: CallbackQuery):
    ras= f_raspis.raspisne(callback.message.chat.id)
    c=0
    if ras=="zero":
        await callback.message.edit_text("–ª–µ—Ç–æ!", reply_markup=kkBackmebu)
    elif len(ras)!=0:
        await callback.answer("–≤—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–ø–∏—Å–∞–Ω–∏–µ")
        c=str(ras[0][1])
        level = f_raspis.flevel_admin(callback.message.chat.id)
        raspis_menu_strelka = f_raspis.level_dly_menu(level, c)
        await callback.message.edit_text(f_raspis.vivod_ras(ras), reply_markup=raspis_menu_strelka)
    else:
        await callback.message.edit_text(f"—Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è {f_raspis.grope(callback.message.chat.id)} –Ω–µ—Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ", reply_markup=ksozdat_ras1)




















#<-
@raspis.callback_query(F.data[:-2].in_({'<-', '<', '>-', '>'}))
async def rasp(callback: CallbackQuery):
    print(callback.data)
    if callback.data[:-2]=="<-":
        c=int(callback.data[-2:])-1
    elif callback.data[:-2]=="<":
        c = int(callback.data[-1]) - 1
    elif callback.data[:-2]==">-":
        c = int(callback.data[-2:]) + 1
    elif callback.data[:-2]==">":
        c = int(callback.data[-1]) + 1
    else:
        c=""
        await callback.message.edit_text("—á—Ç–æ—Ç–æ –ø–æ—à–ª–æ –Ω–µ—Ç–∞–∫",reply_markup=kBackmebu)
    ras= f_raspis.raspisnie_strelochki(callback.message.chat.id, c)
    level = f_raspis.flevel_admin(callback.message.chat.id)
    raspis_menu_strelka= f_raspis.level_dly_menu(level, c)
    if len(ras) != 0:
        await callback.message.edit_text(f_raspis.vivod_ras(ras), reply_markup=raspis_menu_strelka)
    elif c<1 and callback.data[:-2]=="<-" or callback.data[:-2]=="<":
        await callback.message.edit_text("—Ç–∞–∫–æ–π –Ω–µ–¥–µ–ª–∏ –Ω–µ—Ç", reply_markup=kBackmebu)
    elif c > 45 and callback.data[:-2]==">-" or callback.data[:-2]==">":
        await callback.message.edit_text("—Ç–∞–∫–æ–π –Ω–µ–¥–µ–ª–∏ –Ω–µ—Ç",reply_markup=kBackmebu)
    else:
        await callback.message.edit_text(
                f"—Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è {f_raspis.grope(callback.message.chat.id)} –Ω–µ—Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ",
                reply_markup=ksozdat_ras1)
    await asyncio.sleep(1)


























@raspis.callback_query(F.data == "–∏–∑–º–µ–Ω–∏—Ç—å")
async def rasp(callback: CallbackQuery):
    await callback.answer("–∏–∑–º–µ–Ω–∏—Ç—å")
    await callback.message.edit_text('–≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç', reply_markup=kizmenit)






@raspis.callback_query(F.data == "—Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—á")
async def rasp(callback: CallbackQuery,state:FSMContext):
    await callback.answer("–∏–∑–º–µ–Ω–∏—Ç—å")
    await callback.message.edit_text('''–≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É 1 –Ω–µ–¥–µ–ª–∏ 
–≤ —Å–∫–æ–±–∫–∞—Ö —á–µ—Ä–µ–∑ —Ç–∏—Ä–µ (–Ω—É–∂–Ω–æ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)
    –ü—Ä–∏–º–µ—Ä:(2023-09-01)''', reply_markup=ksozdat_ras2)
    await state.set_state(raspisanie.text)

@raspis.message(raspisanie.text)
async def reg_name(message: Message, state:FSMContext):
        await state.update_data(text=message.text)
        await asyncio.sleep(5)
        await message.delete()

@raspis.callback_query(F.data=="–ø—Ä–æ–≤ —Å–æ–∑–¥")
async def Admin(callback: CallbackQuery,state:FSMContext):
    data = await state.get_data()
    if f_raspis.flevel_admin(callback.message.chat.id)<2:
        await state.clear()
        await callback.message.edit_text("–Ω—É–∂–µ–Ω —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ", reply_markup=kBackmebu)
    else:
        await callback.message.edit_text("—Å–æ–∑–¥–∞–Ω–æ", reply_markup=kBackmebu)
        f_raspis.gen_ned(data["text"], callback.message.chat.id)
        await state.clear()















@raspis.callback_query(F.data == "–∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def rasp(callback: CallbackQuery,state:FSMContext):
    await callback.answer("–∏–∑–º–µ–Ω–∏—Ç—å")
    await callback.message.edit_text("""
`–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫`
`–≤—Ç–æ—Ä–Ω–∏–∫`
`—Å—Ä–µ–¥–∞`
`—á–µ—Ç–≤–µ—Ä–≥`
`–ø—è—Ç–Ω–∏—Ü–∞`
`—Å—É–±–±–æ—Ç–∞`
`–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ`

–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞(–º–æ–∂–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å. –ö–∞–∂–¥–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∏—Å–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)

  –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–æ–º–µ—Ä, –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—è
`[–¥–∏—Å–∫—Ä–µ—Ç–∫–∞,1,–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫,27-38]`
                                    
`[–¥–∏—Å–∫—Ä–µ—Ç–∫–∞,1,–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫,27-38]
[–º–∞—Ç –∞–Ω–∞–ª–∏–∑,2,–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫,27-38]
[–ò—Å—Ç–æ—Ä–∏—è,3,–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫,27-38]
[–∞–Ω–≥–ª–∏–π—Å–∫–∏–π,4,–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫,27-38]`""",parse_mode='Markdown', reply_markup=kizmen_rasp)
    await state.set_state(raspisanie.text)

@raspis.message(raspisanie.text)
async def reg_name(message: Message, state:FSMContext):
        await state.update_data(text=message.text)
        await asyncio.sleep(5)
        await message.delete()

@raspis.callback_query(F.data=="–ø—Ä–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–∏–µ")
async def Admin(callback: CallbackQuery,state:FSMContext):
    data = await state.get_data()
    await callback.message.edit_text("–∏–∑–º–µ–Ω–µ–Ω–æ", reply_markup=kBackmebu)
    f_raspis.dobavit_paru(data["text"], callback.message.chat.id)
    await state.clear()













@raspis.callback_query(F.data == "—É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def rasp(callback: CallbackQuery,state:FSMContext):
    await callback.answer("–∏–∑–º–µ–Ω–∏—Ç—å")
    await callback.message.edit_text('–≤—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=kdel_raspis)
@raspis.callback_query(F.data == "–ø—Ä–æ–≤ —É–¥–∞–ª–µ–Ω–∏–µ")
async def rasp(callback: CallbackQuery,state:FSMContext):
    await callback.answer("–∏–∑–º–µ–Ω–∏—Ç—å")
    await callback.message.edit_text('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ', reply_markup=kBackmebu)
    f_raspis.del_in_groupe(callback.message.chat.id)


kBackmebu = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–í—ã–π—Ç–∏‚Ü©Ô∏è", callback_data="menu")]])

ksozdat_ras1=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="—Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ‚ûï",callback_data="—Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—á")],
                                                  [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞‚Ü©Ô∏è",callback_data="menu")]])

ksozdat_ras2=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –í–≤–æ–¥‚úÖ",callback_data="–ø—Ä–æ–≤ —Å–æ–∑–¥")],
                                                  [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞‚Ü©Ô∏è",callback_data="menu")]])

kdel_raspis=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–£–î–ê–õ–ò–¢–¨üóë",callback_data="–ø—Ä–æ–≤ —É–¥–∞–ª–µ–Ω–∏–µ")],
                                                  [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞‚Ü©Ô∏è",callback_data="menu")]])

kizmen_rasp=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –í–≤–æ–¥‚úÖ",callback_data="–ø—Ä–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–∏–µ")],
                                                  [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞‚Ü©Ô∏è",callback_data="menu")]])

kizmenit=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüóì",callback_data="–∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")],
                                                    [InlineKeyboardButton(text="—É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüóë",callback_data="—É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")],
                                                        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞‚Ü©Ô∏è",callback_data="menu")]])
kkBackmebu = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="—É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüóë",callback_data="—É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")],[InlineKeyboardButton(text="–í—ã–π—Ç–∏‚Ü©Ô∏è", callback_data="menu")]])